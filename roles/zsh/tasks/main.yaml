---
- name: Ensure zsh data directory is exist
  ansible.builtin.file:
    path: "{{ xdg_data_home }}/zsh"
    mode: '0700'
    state: directory
  when: desired_state == 'present'

- name: Remove zsh data directory
  ansible.builtin.file:
    path: "{{ xdg_data_home }}/zsh"
    state: absent
  when: desired_state == 'absent'

- name: Ensure zsh config directory is exist
  ansible.builtin.file:
    path: "{{ xdg_config_home }}/zsh"
    mode: '0700'
    state: directory
  when: desired_state == 'present'

- name: Remove zsh config directory
  ansible.builtin.file:
    path: "{{ xdg_config_home }}/zsh"
    state: absent
  when: desired_state == 'absent'

- name: Setup base zsh configs
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0600'
  loop:
    - { src: zprofile.j2, dest: "{{ xdg_config_home }}/zsh/.zprofile" }
    - { src: zshrc.j2, dest: "{{ xdg_config_home }}/zsh/.zshrc" }
    - { src: zshenv.j2, dest: "{{ ansible_env.HOME }}/.zshenv" }
  when: desired_state == 'present'

- name: Ensure zsh.d config directory is exist
  ansible.builtin.file:
    path: "{{ xdg_config_home }}/zsh/zsh.d"
    mode: '0700'
    state: directory
  when: desired_state == 'present'

- name: Setup zsh.d configs
  ansible.builtin.copy:
    src: "zsh.d/"
    dest: "{{ xdg_config_home }}/zsh/zsh.d/"
    mode: '0600'
  when: desired_state == 'present'

- name: Setup zsh as default shell
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: "{{ zsh_bin }}"
  when: desired_state == 'present' and ansible_user_shell != zsh_bin
...
